package com.example.acespringbackend.auth.dto;

/**
 * Data Transfer Object (DTO) for encapsulating the response from a paraphrasing service.
 * This DTO contains the processed content and information about any errors that occurred.
 */
public class ParaphrasingResponse {

    /**
     * The paraphrased text or content generated by the service.
     * This field will be populated upon a successful operation.
     */
    private String paraphrasedContent;

    /**
     * A boolean flag indicating whether an error occurred during the paraphrasing process.
     * {@code true} if an error occurred, {@code false} otherwise.
     */
    private boolean error;

    /**
     * A descriptive error message, populated if {@code error} is {@code true}.
     * This message provides details about what went wrong during the operation.
     */
    private String errorMessage;

    /**
     * Default no-argument constructor for {@code ParaphrasingResponse}.
     * This constructor is essential for deserialization frameworks (like Spring)
     * to automatically map JSON data into an instance of this object.
     */
    public ParaphrasingResponse() {
        // Default constructor
    }

    /**
     * Constructs a new {@code ParaphrasingResponse} with the specified content,
     * error status, and an optional error message.
     *
     * @param paraphrasedContent The generated paraphrased text. Can be {@code null} if an error occurred.
     * @param error              A boolean indicating if an error was encountered.
     * @param errorMessage       A descriptive error message. Can be {@code null} if no error.
     */
    public ParaphrasingResponse(String paraphrasedContent, boolean error, String errorMessage) {
        this.paraphrasedContent = paraphrasedContent;
        this.error = error;
        this.errorMessage = errorMessage;
    }

    // --- Getters ---

    /**
     * Retrieves the paraphrased content.
     *
     * @return The paraphrased content as a {@link String}, or {@code null} if an error occurred.
     */
    public String getParaphrasedContent() {
        return paraphrasedContent;
    }

    /**
     * Checks if an error occurred during the paraphrasing operation.
     *
     * @return {@code true} if there was an error, {@code false} otherwise.
     */
    public boolean isError() {
        return error;
    }

    /**
     * Retrieves the error message, if an error occurred.
     *
     * @return The error message as a {@link String}, or {@code null} if no error.
     */
    public String getErrorMessage() {
        return errorMessage;
    }

    // --- Setters ---

    /**
     * Sets the paraphrased content.
     *
     * @param paraphrasedContent The paraphrased content to set.
     */
    public void setParaphrasedContent(String paraphrasedContent) {
        this.paraphrasedContent = paraphrasedContent;
    }

    /**
     * Sets the error status of the response.
     *
     * @param error {@code true} to indicate an error, {@code false} for success.
     */
    public void setError(boolean error) {
        this.error = error;
    }

    /**
     * Sets the error message for the response.
     *
     * @param errorMessage The error message to set.
     */
    public void setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
    }
}